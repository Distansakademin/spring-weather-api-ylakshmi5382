<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.2.2</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.jensen.weather</groupId>
	<artifactId>weathertoday</artifactId>
	<version>0.0.1</version>
	<name>weathertoday</name>
	<description>This api provides today weather information in your city and town.</description>
	<properties>
		<java.version>17</java.version>
		<repository-owner>ylakshmi5382</repository-owner>
		<repository-name>spring-weather-api-ylakshmi5382</repository-name>
		<branch-name>dev</branch-name>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-core</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-docker-compose</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!--openapi dependency-->
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
			<version>2.3.0</version>
		</dependency>

		<!-- Metrics -->
		<dependency>
			<groupId>org.jolokia</groupId>
			<artifactId>jolokia-core</artifactId>
			<version>1.7.2</version>
		</dependency>

		<dependency>
			<groupId>org.openapitools</groupId>
			<artifactId>jackson-databind-nullable</artifactId>
			<version>0.2.6</version>
			<exclusions>
				<exclusion>
					<groupId>com.fasterxml.jackson.core</groupId>
					<artifactId>jackson-databind</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<configuration>
						<source>17</source>
						<target>17</target>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.openapitools</groupId>
				<artifactId>openapi-generator-maven-plugin</artifactId>
				<!-- RELEASE_VERSION -->
				<version>6.4.0</version>
				<!-- /RELEASE_VERSION -->
				<executions>
					<execution>
						<id>weather-today-rest-api</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>${project.basedir}/src/main/resources/api/weathertoday.yaml</inputSpec>
							<generatorName>spring</generatorName>
							<generateModelTests>false</generateModelTests>
							<generateModelDocumentation>false</generateModelDocumentation>
							<packageName>com.jensen.weather.rest</packageName>
							<apiPackage>com.jensen.weather.rest.api</apiPackage>
							<modelPackage>com.jensen.weather.rest.model</modelPackage>
							<configOptions>
								<useJakartaEe>true</useJakartaEe>
								<interfaceOnly>true</interfaceOnly>
								<additionalModelTypeAnnotations>@lombok.Builder @lombok.NoArgsConstructor @lombok.AllArgsConstructor</additionalModelTypeAnnotations>
							</configOptions>
						</configuration>
					</execution>
				</executions>
			</plugin>

			 <plugin>
				<groupId>com.spotify</groupId>
				<artifactId>dockerfile-maven-plugin</artifactId>
				<version>1.4.10</version>
				<executions>
					<execution>
						<id>tag-latest</id>
						<goals>
							<goal>build</goal>
							<goal>tag</goal>
							<goal>push</goal>
						</goals>
						<configuration>
							<tag>latest</tag>
						</configuration>
					</execution>
					<execution>
						<id>tag-version</id>
						<goals>
							<goal>build</goal>
							<goal>tag</goal>
							<goal>push</goal>
						</goals>
						<configuration>
							<tag>${project.version}</tag>
						</configuration>
					</execution>
				</executions>
				<configuration>
					<useMavenSettingsForAuth>true</useMavenSettingsForAuth>
					<dockerfile>${pom.basedir}/Dockerfile</dockerfile>
					<repository>https://hub.docker.com/lakshmi5382/jensensweatherapp</repository>
					<tag>${project.name}:${project.version}</tag>
					<buildArgs>
						<JAR_FILE>target/*.jar</JAR_FILE>
					</buildArgs>
				</configuration>
			</plugin>


			<plugin>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>3.1.1</version>
				<configuration>
					<altDeploymentRepository>
						internal.repo::default::file://${project.build.directory}/mvn-artifact
					</altDeploymentRepository>
				</configuration>
			</plugin>


			<plugin>
				<groupId>com.github.github</groupId>
				<artifactId>site-maven-plugin</artifactId>
				<version>0.12</version>
				<configuration>
					<message>Maven artifacts for ${project.version}</message>
					<noJekyll>true</noJekyll>
					<outputDirectory>${project.build.directory}</outputDirectory>
					<branch>refs/heads/${branch-name}</branch>
					<includes>
						<include>**/*</include>
					</includes>
					<merge>true</merge>
					<repositoryName>${repository-name}</repositoryName>
					<repositoryOwner>${repository-owner}</repositoryOwner>
					<server>github</server>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>site</goal>
						</goals>
						<phase>deploy</phase>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<!-- <distributionManagement>
		<repository>
			<id>internal.repo</id>
			<name>Temporary Staging Repository</name>
			<url>file://${project.build.directory}/mvn-artifact</url>
		</repository>

	</distributionManagement> -->

	<distributionManagement>
		<repository>
			<id>internal.repo</id>
			<name>Temporary Staging Repository</name>
			<url>file://${project.build.directory}/mvn-artifact</url>
		</repository>

		<!-- <repository>
		<id>github</id>
		<name>spring-weather-api-ylakshmi5382</name>
		<url>https://github.com/Distansakademin/spring-weather-api-ylakshmi5382</url>
	</repository> -->
</distributionManagement>


	<repositories>
		<repository>
			<id>PROJECT-REPO-URL</id>
			<url>https://github.com/Distansakademin/spring-weather-api-ylakshmi5382/dev</url>
					</repository>
	</repositories>



</project>
